<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="${basedir}/logs/nlog-internal.txt">

  <variable name="gmailUsername" value="${trim-whitespace:${file-contents:${basedir}/gmailusername.txt}}" />
  <variable name="gmailPassword" value="${trim-whitespace:${file-contents:${basedir}/gmailpassword.txt}}" />

  <extensions>
    <!-- load NLog.Web to enable ASP.NET-specific functionality -->
    <add assembly="NLog.Web"/>
  </extensions>

  <!-- define various log targets -->
  <targets>
    <!-- write logs to file -->
    <target xsi:type="File" name="file" 
            fileName="${basedir}/logs/${shortdate}.log"
            archiveFileName="${basedir}/logs/Archive/${shortdate}.log"
            maxArchiveFiles="180"
            archiveEvery="Day"
            layout="${longdate} ${logger:shortName=true} ${aspnet-request:servervariable=URL} ${uppercase:${level}} ${mdc:item=ActionName} ${message} ${exception:format=toString}" />

    <!-- send mail through GMail server -->
    <target xsi:type="Mail"
            name="mail"
            smtpServer="smtp.gmail.com"
            smtpPort="587"
            enableSsl="true"
            smtpAuthentication="Basic"
            smtpUserName="${gmailUsername}"
            smtpPassword="${gmailPassword}"
            from="${gmailUsername}"
            to="${gmailUsername}"
            subject="LogAlert [Nuget.server]: ${message}"
            body="${longdate} ${logger:shortName=true} ${aspnet-request:servervariable=URL} ${uppercase:${level}} ${mdc:item=ActionName} ${message} ${exception:format=toString}"
            addNewLines="true"
            />

    <!-- send mail asynchronously, so that it does not block the calling thread -->
    <wrapper-target xsi:type="AsyncWrapper" name="asyncMail">
      <target-ref name="mail"/>
    </wrapper-target>

    <wrapper-target xsi:type="AspNetBufferingWrapper" name="allOutputs">
      <wrapper-target xsi:type="PostFilteringWrapper">
        <compound-target xsi:type="SplitGroup">
          <target-ref name="file" />
          <!--<target-ref name="db" />-->
          <!--<target-ref name="eventLog" />-->
          <!--<target-ref name="pc1" />-->
          <!--<target-ref name="asyncMail" />-->
        </compound-target>
        
        <!-- during normal execution only log Info messages -->
        <defaultFilter>level >= LogLevel.Info</defaultFilter>
        
        <!-- if there is at least one error, log everything from trace level -->
        <when exists="level >= LogLevel.Error" filter="level >= LogLevel.Trace" />
      </wrapper-target>
    </wrapper-target>
  </targets>

  <rules>
    <logger name="*" minlevel="Trace" writeTo="allOutputs" />
    <logger name="*" minlevel="Info" writeTo="file" />
    <logger name="*" minlevel="Info" writeTo="asyncMail" />
  </rules>
</nlog>